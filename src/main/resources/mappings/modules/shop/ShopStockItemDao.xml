<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.shop.dao.ShopStockItemDao">
    
	<sql id="shopStockItemColumns">
		a.id AS "id",
		a.stock_id AS "stockId",
		a.stock_name AS "stockName",
		a.office_id AS "officeId",
		a.product_type_id AS "productTypeId",
		a.product_type_name AS "productTypeName",
		a.product_id AS "productId",
		a.product_name AS "productName",
		a.product_no AS "productNo",
		a.stock_num AS "stockNum",
		a.warn_stock AS "warnStock",
		a.list_no AS "listNo",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="shopStockItemJoins">
		left join shop_product b on(a.product_id = b.id) 
	</sql>
    
	<select id="get" resultType="ShopStockItem">
		SELECT 
			<include refid="shopStockItemColumns"/>
		FROM shop_stock_item a
		<include refid="shopStockItemJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ShopStockItem">
		SELECT 
			<include refid="shopStockItemColumns"/>
		FROM shop_stock_item a
		<include refid="shopStockItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="stockId != null and stockId != ''">
				AND a.stock_id = #{stockId}
			</if>
			<if test="productTypeId != null and productTypeId != ''">
				AND a.product_type_id = #{productTypeId}
			</if>
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="officeId != null and officeId != ''">
				AND a.office_id = #{officeId}
			</if>
			<if test="productName != null and productName != ''">
				AND b.product_name LIKE
					<if test="dbName == 'oracle'"> '%'||#{productName}||'%'</if>
					<if test="dbName == 'mssql'">AND a.product_name LIKE '%'+#{productName}+'%'</if>
					<if test="dbName == 'mysql'"> concat('%',#{productName},'%') </if>
			</if> 
			<if test="pingyinStr != null and pingyinStr != ''">
				AND b.product_char like concat('%',#{pingyinStr},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.stock_name,a.list_no 
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ShopStockItem">
		SELECT 
			<include refid="shopStockItemColumns"/>
		FROM shop_stock_item a
		<include refid="shopStockItemJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.stock_name,a.list_no 
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO shop_stock_item(
			id,
			stock_id,
			stock_name,
			office_id,
			product_type_id,
			product_type_name,
			product_id,
			product_name,
			product_no,
			stock_num,
			warn_stock,
			list_no,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{stockId},
			#{stockName},
			#{officeId},
			#{productTypeId},
			#{productTypeName},
			#{productId},
			#{productName},
			#{productNo},
			#{stockNum},
			#{warnStock},
			#{listNo},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE shop_stock_item SET 	
			stock_id = #{stockId},
			stock_name = #{stockName},
			office_id = #{officeId},
			product_type_id = #{productTypeId},
			product_type_name = #{productTypeName},
			product_id = #{productId},
			product_name = #{productName},
			product_no = #{productNo},
			stock_num = #{stockNum},
			warn_stock = #{warnStock},
			list_no = #{listNo},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE shop_stock_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="findProductStockNum" resultType="shopStockItem">
		SELECT sum(stock_num) as stockNum,a.product_id as productId,a.product_name as productName 
		FROM SHOP_STOCK_ITEM a where a.del_flag = #{DEL_FLAG_NORMAL} 
		<if test="productId != null and productId != ''">
			AND a.product_id = #{productId}
		</if>
		<if test="stockId != null and stockId != ''">
			AND a.stock_id = #{stockId}
		</if>
	</select>	
	
	<update id="deleteByProductId" >
		UPDATE shop_stock_item SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE product_id = #{productId}
	</update>	
</mapper>